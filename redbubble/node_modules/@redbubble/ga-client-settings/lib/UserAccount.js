'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _format = require('date-fns/format');

var _format2 = _interopRequireDefault(_format);

var _parseISO = require('date-fns/parseISO');

var _parseISO2 = _interopRequireDefault(_parseISO);

var _isValid = require('date-fns/isValid');

var _isValid2 = _interopRequireDefault(_isValid);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var formatDate = function formatDate(date) {
  var parsedDate = (0, _parseISO2.default)(date);
  if (date && (0, _isValid2.default)(parsedDate)) {
    return (0, _format2.default)(parsedDate, 'yyyyMMdd');
  }
  return date;
};

var UserAccount = function () {
  function UserAccount(userAccount) {
    _classCallCheck(this, UserAccount);

    this.data = userAccount || {};
  }

  // eslint-disable-next-line class-methods-use-this


  _createClass(UserAccount, [{
    key: 'validate',
    value: function validate() {
      return null;
    }
  }, {
    key: 'toDimensions',
    value: function toDimensions() {
      if (!Object.keys(this.data).length) return null;

      return {
        dimension2: this.joinedDate(),
        dimension3: this.onboardedDate(),
        dimension13: this.artistUploadsGroup(),
        dimension14: this.artistSalesGroup()
      };
    }
  }, {
    key: 'joinedDate',
    value: function joinedDate() {
      return formatDate(this.data.joinedAt);
    }
  }, {
    key: 'onboardedDate',
    value: function onboardedDate() {
      return formatDate(this.data.onboardedAt);
    }
  }, {
    key: 'artistUploadsGroup',
    value: function artistUploadsGroup() {
      return this.analytics().artistUploadsGroup;
    }
  }, {
    key: 'artistSalesGroup',
    value: function artistSalesGroup() {
      return this.analytics().artistSalesGroup;
    }
  }, {
    key: 'analytics',
    value: function analytics() {
      return this.data.analytics || {};
    }
  }]);

  return UserAccount;
}();

exports.default = UserAccount;