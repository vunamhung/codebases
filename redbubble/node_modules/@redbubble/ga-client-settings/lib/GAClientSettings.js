'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _UserInfo = require('./UserInfo');

var _UserInfo2 = _interopRequireDefault(_UserInfo);

var _UserAccount = require('./UserAccount');

var _UserAccount2 = _interopRequireDefault(_UserAccount);

var _Experiments = require('./Experiments');

var _Experiments2 = _interopRequireDefault(_Experiments);

var _CustomDimensionsStore = require('./CustomDimensionsStore');

var _CustomDimensionsStore2 = _interopRequireDefault(_CustomDimensionsStore);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var GAClientSettings = function () {
  function GAClientSettings(_ref) {
    var userInfo = _ref.userInfo,
        experiments = _ref.experiments,
        enrolments = _ref.enrolments,
        userAccount = _ref.userAccount,
        dimensions = _ref.dimensions;

    _classCallCheck(this, GAClientSettings);

    this.userInfo = new _UserInfo2.default(userInfo);
    this.experiments = new _Experiments2.default(experiments, enrolments);
    this.userAccount = new _UserAccount2.default(userAccount);
    this.dimensions = new _CustomDimensionsStore2.default(dimensions);
  }

  _createClass(GAClientSettings, [{
    key: 'validateDimensions',
    value: function validateDimensions() {
      var err = void 0;

      err = this.userInfo.validate();
      if (err) {
        throw new Error('Failed to validate userInfo: ' + err.message);
      }

      err = this.experiments.validate();
      if (err) {
        throw new Error('Failed to validate experiments: ' + err.message);
      }

      err = this.userAccount.validate();
      if (err) {
        throw new Error('Failed to validate userAccount: ' + err.message);
      }

      err = this.dimensions.validate();
      if (err) {
        throw new Error('Failed to validate dimensions: ' + err.message);
      }
    }
  }, {
    key: 'buildDimensions',
    value: function buildDimensions() {
      var dimensions = _extends({}, this.userInfo.toDimensions(), this.experiments.toDimensions(), this.userAccount.toDimensions(), this.dimensions.toDimensions());

      return Object.keys(dimensions).reduce(function (prev, cur) {
        if (dimensions[cur] == null) return prev;
        return _extends({}, prev, _defineProperty({}, cur, dimensions[cur]));
      }, {});
    }
  }]);

  return GAClientSettings;
}();

exports.default = GAClientSettings;