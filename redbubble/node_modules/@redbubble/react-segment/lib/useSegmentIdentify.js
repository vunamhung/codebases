"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = require("react");

var _get = _interopRequireDefault(require("lodash/get"));

var _context = _interopRequireDefault(require("./context"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var useSegmentIdentify = function useSegmentIdentify(user) {
  var segmentClient = (0, _react.useContext)(_context["default"]);
  (0, _react.useEffect)(function () {
    var isLoggedIn = (0, _get["default"])(user, 'isLoggedIn');
    var userId = (0, _get["default"])(user, 'userId');
    var locale = (0, _get["default"])(user, 'locale');
    if (!userId) return;
    /**
     * Events can be fired before the Segment client is ready.
     *
     * Segment queues these events and sends them when the client is ready.
     *
     * We need to set the anonymous ID _before_ the client is ready so that queued events
     * use the correct anonymous ID
     */

    if (!isLoggedIn) {
      segmentClient.setAnonymousId(userId);
    }
    /**
      * The following checks all run after the Segment client is ready
      * when we have access to segmentClient.user()
      */


    if (!segmentClient.isReady) return;

    if (isLoggedIn && segmentClient.user().id() !== userId) {
      segmentClient.identify(userId, {}, {
        locale: locale
      });
    }

    if (!isLoggedIn && segmentClient.user().id()) {
      segmentClient.reset();
      segmentClient.setAnonymousId(userId);
    }
  }, [user, segmentClient]);
};

var _default = useSegmentIdentify;
exports["default"] = _default;