'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _hoistNonReactStatics = require('hoist-non-react-statics');

var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

var _reactRedux = require('react-redux');

var _actions = require('../../redux/actions');

var actions = _interopRequireWildcard(_actions);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

exports.default = function (Component) {
  var withAnalytics = function (_React$Component) {
    _inherits(withAnalytics, _React$Component);

    function withAnalytics(props) {
      _classCallCheck(this, withAnalytics);

      var _this = _possibleConstructorReturn(this, (withAnalytics.__proto__ || Object.getPrototypeOf(withAnalytics)).call(this, props));

      _this.validateAndSetDimensions = _this.validateAndSetDimensions.bind(_this);
      return _this;
    }

    _createClass(withAnalytics, [{
      key: 'validateAndSetDimensions',
      value: function validateAndSetDimensions(dimensions) {
        if (typeof window === 'undefined') return;

        var _props = this.props,
            userInfo = _props.userInfo,
            userAccount = _props.userAccount,
            onError = _props.onError;

        var _ref = userInfo || {},
            experiments = _ref.experiments,
            enrolments = _ref.enrolments;

        try {
          this.props.validateAndSetDimensions({
            userInfo: userInfo,
            userAccount: userAccount,
            experiments: experiments,
            enrolments: enrolments,
            dimensions: dimensions
          });
        } catch (e) {
          if (onError) {
            onError(e);
            return;
          }
          throw e;
        }
      }

      // eslint-disable-next-line camelcase

    }, {
      key: 'UNSAFE_componentWillMount',
      value: function UNSAFE_componentWillMount() {
        this.props.pauseGASending();
      }
    }, {
      key: 'componentDidMount',
      value: function componentDidMount() {
        this.props.resumeGASending();
      }
    }, {
      key: 'render',
      value: function render() {
        var _props2 = this.props,
            validateAndSetDimensions = _props2.validateAndSetDimensions,
            onError = _props2.onError,
            ownProps = _objectWithoutProperties(_props2, ['validateAndSetDimensions', 'onError']);

        return _react2.default.createElement(Component, _extends({}, ownProps, {
          validateAndSetDimensions: this.validateAndSetDimensions
        }));
      }
    }]);

    return withAnalytics;
  }(_react2.default.Component);

  withAnalytics.propTypes = {
    pauseGASending: _propTypes2.default.func,
    resumeGASending: _propTypes2.default.func,
    setDimensions: _propTypes2.default.func,
    onError: _propTypes2.default.func,
    userInfo: _propTypes2.default.shape({
      locale: _propTypes2.default.string,
      experiments: _propTypes2.default.arrayOf(_propTypes2.default.shape({
        experiment: _propTypes2.default.string,
        group: _propTypes2.default.string
      })),
      enrolments: _propTypes2.default.arrayOf(_propTypes2.default.shape({
        experiment: _propTypes2.default.string,
        group: _propTypes2.default.string
      }))
    }),
    userAccount: _propTypes2.default.shape({
      joinedAt: _propTypes2.default.string,
      onboardedAt: _propTypes2.default.string,
      analytics: _propTypes2.default.shape({
        artistSalesGroup: _propTypes2.default.string,
        artistUploadsGroup: _propTypes2.default.string
      })
    }),
    // eslint-disable-next-line react/forbid-prop-types
    analytics: _propTypes2.default.object
  };

  withAnalytics.defaultProps = {
    pauseGASending: function pauseGASending() {},
    resumeGASending: function resumeGASending() {},
    validateAndSetDimensions: function validateAndSetDimensions() {},
    onError: function onError() {},
    userInfo: {},
    userAccount: {},
    analytics: {}
  };

  withAnalytics = (0, _reactRedux.connect)(null, actions)(withAnalytics);
  withAnalytics.displayName = Component.displayName || Component.name || 'ComponentWithAnalytics';
  return (0, _hoistNonReactStatics2.default)(withAnalytics, Component);
};