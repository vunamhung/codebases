import React from 'react';
import PropTypes from 'prop-types';
import cnames from 'classnames';
import { FormattedMessage } from 'react-intl';
import styles from './PromoMessage.scss';
import Text from '../../../Text';
import { DESKTOP, MOBILE } from '../../../constants';
import TimeRemaining from '../../../TimeRemaining';

const PromoMessage = ({ banners, profile }) => {
  const isDesktop = profile === DESKTOP;
  if (!(Array.isArray(banners) && banners.length)) {
    return (
      <div className={cnames(
        styles.promoMessageContainer,
        {
          [styles.desktop]: isDesktop,
        },
      )}
      />
    );
  }

  const [banner] = banners;

  const classNames = cnames(styles.promoMessage, {
    [styles.desktop]: isDesktop,
  });

  let bannerMessage = banner && banner.message;
  const showCountdown = bannerMessage && bannerMessage.includes('[c]');
  bannerMessage = bannerMessage && bannerMessage.replace('[c]', '').trim();

  return bannerMessage ? (
    <div className={classNames}>
      <TimeRemaining until={banner.endDate}>
        {
          (timeRemaining) => {
            const outOfTime = timeRemaining && timeRemaining === '00:00:00';
            if (outOfTime) return null;

            const messageClassNames = cnames(styles.message, {
              [styles.messageOnly]: !timeRemaining || !showCountdown,
            });

            return (
              <div className={styles.wrapper}>
                {
                  isDesktop && timeRemaining && showCountdown && (
                    <div className={styles.timeRemaining}>
                      <Text
                        display="block"
                        type="caption"
                        className={styles.ends}
                      >
                        <FormattedMessage defaultMessage="Offer ends in" />
                      </Text>
                      <Text display="block" type="display5">
                        {timeRemaining}
                      </Text>
                    </div>
                  )
                }
                <Text type={isDesktop ? 'display4' : 'body2'} className={messageClassNames}>
                  <span
                    // eslint-disable-next-line react/no-danger
                    dangerouslySetInnerHTML={{ __html: bannerMessage }}
                  />

                  {
                    !isDesktop && timeRemaining && showCountdown && (
                      <React.Fragment>
                        {' '}
                        <Text
                          type="body2"
                          className={styles.ends}
                        >
                          <FormattedMessage defaultMessage="Offer ends in" />
                        </Text>
                        <Text type="body2">
                          <strong>
                            {timeRemaining}
                          </strong>
                        </Text>
                      </React.Fragment>
                    )
                  }
                </Text>
              </div>
            );
          }
        }
      </TimeRemaining>
    </div>
  ) : null;
};

PromoMessage.propTypes = {
  banners: PropTypes.arrayOf(PropTypes.shape({
    message: PropTypes.string,
  })),
  profile: PropTypes.oneOf([DESKTOP, MOBILE]),
};

PromoMessage.defaultProps = {
  banners: [],
  profile: DESKTOP,
};

export default PromoMessage;
