import React, { Component } from 'react';
import PropTypes from 'prop-types';
import cnames from 'classnames';
import { defineMessages } from 'react-intl';
import { sortItems, isNavigationItemActive, itemsPropShape } from '../utils';
import PageSection from '../../PageSection';
import Box from '../../Box';
import styles from './styles.scss';
import Item from './Item';

const messages = defineMessages({
  navigationListLabel: 'Products',
});

const TAB_KEY_CODE = 9;

class ProductNav extends Component {
  constructor() {
    super();

    this.state = {
      isOpen: false,
      lastVisibleSubItemSettings: { height: 0, xPosition: 0 },
      isAnimationEnabled: false,
    };
    this.open = this.open.bind(this);
    this.handleSettingsOfSubItem = this.handleSettingsOfSubItem.bind(this);
    this.handleKeyDown = this.handleKeyDown.bind(this);
    this.handleHover = this.handleHover.bind(this);
  }

  open(isOpen) {
    this.setState({ isOpen });
  }

  handleHover() {
    if (!this.state.isAnimationEnabled) {
      this.setState({ isAnimationEnabled: true });
    }
  }

  handleSettingsOfSubItem(settings) {
    const { lastVisibleSubItemSettings } = this.state;
    const {
      height,
      xPosition,
    } = settings;

    if (
      height !== lastVisibleSubItemSettings.height
        || xPosition !== lastVisibleSubItemSettings.xPosition
    ) {
      this.setState({
        lastVisibleSubItemSettings: {
          height,
          xPosition,
        },
      });
    }
  }

  handleKeyDown(e, id) {
    const { focusedItem } = this.state;

    if (e.keyCode === TAB_KEY_CODE && id !== focusedItem) {
      this.setState({ focusedItem: id });
    }
  }

  render() {
    const {
      intl,
      items: rootItems,
      logEvent,
    } = this.props;
    const {
      isOpen,
      lastVisibleSubItemSettings,
      focusedItem,
      isAnimationEnabled,
    } = this.state;
    const navClass = cnames(styles.nav, {
      [styles.isOpen]: isOpen,
    });
    let activeItemIsSet = false;

    if (!Array.isArray(rootItems) || !rootItems.length) return null;

    return (
      <Box
        style={{
          backgroundColor: 'var(--ds-color-background-ui)',
          borderBottom: 'var(--ds-size-border-width-small) solid var(--ds-color-border-light)',
        }}
      >
        <PageSection>
          <nav
            className={navClass}
            aria-label={intl.formatMessage(messages.navigationListLabel)}
          >
            <ul
              className={styles.list}
              role="menubar"
            >
              {
                [...rootItems].sort(sortItems).map((rootItem, i) => {
                  const isActive = isNavigationItemActive(rootItem);
                  const itemProps = {
                    key: rootItem.id,
                    rootItem,
                    settingsOfSubItem: this.handleSettingsOfSubItem,
                    settingsForSubItem: lastVisibleSubItemSettings,
                    isInSecondHalf: i > ((rootItems.length / 2) - 1),
                    handleKeyDown: () => this.handleKeyDown(rootItem.id),
                    open: this.open,
                    handleHover: this.handleHover,
                    isOpen,
                    isAnimationEnabled,
                    logEvent,
                  };

                  if (!activeItemIsSet && isActive) {
                    itemProps.isActive = true;
                    itemProps.shouldShowSubItems = rootItem.id === focusedItem;
                    activeItemIsSet = true;
                  }

                  return (
                    <Item {...itemProps} />
                  );
                })
              }
            </ul>
          </nav>
        </PageSection>
      </Box>
    );
  }
}

ProductNav.propTypes = {
  // eslint-disable-next-line react/no-typos
  intl: PropTypes.shape({}).isRequired,
  // eslint-disable-next-line react/no-typos
  items: itemsPropShape,
  logEvent: PropTypes.func,
};

ProductNav.defaultProps = {
  items: [],
  logEvent: () => {},
};

ProductNav.displayName = 'ProductNav';

export default ProductNav;
