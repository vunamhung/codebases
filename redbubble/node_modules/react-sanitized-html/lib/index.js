'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _sanitizeHtml = require('sanitize-html');

var _sanitizeHtml2 = _interopRequireDefault(_sanitizeHtml);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SUPPORTED_SANITIZER_OPTIONS = ['allowProtocolRelative', 'allowedAttributes', 'allowedClasses', 'allowedSchemes', 'allowedSchemesByTag', 'allowedTags', 'exclusiveFilter', 'nonTextTags', 'parser', 'selfClosing', 'transformTags'];

var SanitizedHTML = function (_React$Component) {
  _inherits(SanitizedHTML, _React$Component);

  function SanitizedHTML() {
    _classCallCheck(this, SanitizedHTML);

    return _possibleConstructorReturn(this, (SanitizedHTML.__proto__ || Object.getPrototypeOf(SanitizedHTML)).apply(this, arguments));
  }

  _createClass(SanitizedHTML, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var sanitizerOptions = SUPPORTED_SANITIZER_OPTIONS.reduce(function (options, name) {
        var value = _this2.props[name];

        if (typeof value !== 'undefined') {
          options[name] = value;
        }

        return options;
      }, {});

      var sanitizedHTML = (0, _sanitizeHtml2.default)(this.props.html, sanitizerOptions);

      return _react2.default.createElement('div', {
        className: this.props.className,
        dangerouslySetInnerHTML: { __html: sanitizedHTML },
        id: this.props.id,
        style: this.props.style
      });
    }
  }]);

  return SanitizedHTML;
}(_react2.default.Component);

exports.default = SanitizedHTML;


SanitizedHTML.defaultProps = {
  html: ''
};

SanitizedHTML.propTypes = {
  allowProtocolRelative: _propTypes2.default.bool,
  allowedAttributes: _propTypes2.default.objectOf(_propTypes2.default.arrayOf(_propTypes2.default.string)),
  allowedClasses: _propTypes2.default.objectOf(_propTypes2.default.arrayOf(_propTypes2.default.string)),
  allowedSchemes: _propTypes2.default.arrayOf(_propTypes2.default.string),
  allowedSchemesByTag: _propTypes2.default.objectOf(_propTypes2.default.arrayOf(_propTypes2.default.string)),
  allowedTags: _propTypes2.default.arrayOf(_propTypes2.default.string),
  exclusiveFilter: _propTypes2.default.func,
  html: _propTypes2.default.string.isRequired,
  nonTextTags: _propTypes2.default.arrayOf(_propTypes2.default.string),
  parser: _propTypes2.default.any,
  selfClosing: _propTypes2.default.arrayOf(_propTypes2.default.string),
  transformTags: _propTypes2.default.objectOf(_propTypes2.default.oneOf([_propTypes2.default.func, _propTypes2.default.string])),

  className: _propTypes2.default.string,
  id: _propTypes2.default.string,
  style: _propTypes2.default.any
};
//# sourceMappingURL=index.js.map